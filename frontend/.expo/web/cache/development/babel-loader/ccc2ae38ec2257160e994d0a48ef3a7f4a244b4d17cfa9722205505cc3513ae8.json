{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CustomButton from \"../components/CustomButton\";\nimport API from \"../api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tournaments = _useState2[0],\n    setTournaments = _useState2[1];\n  useEffect(function () {\n    fetchTournaments();\n  }, []);\n  var fetchTournaments = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var res = yield API.get(\"/tournaments\");\n        if (res.data) {\n          setTournaments(res.data);\n        } else {\n          Alert.alert(\"Error\", \"Failed to load tournaments\");\n        }\n      } catch (err) {\n        console.error(\"Fetch tournaments error:\", err);\n        Alert.alert(\"Error\", \"Server not responding\");\n      }\n    });\n    return function fetchTournaments() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var renderTournament = function renderTournament(_ref3) {\n    var item = _ref3.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.card,\n      onPress: function onPress() {\n        return navigation.navigate(\"TournamentDetail\", {\n          id: item._id\n        });\n      },\n      children: [_jsx(Text, {\n        style: styles.name,\n        children: item.name\n      }), _jsxs(Text, {\n        style: styles.info,\n        children: [\"Game: \", item.game]\n      }), _jsxs(Text, {\n        style: styles.info,\n        children: [\"Prize: \\u20B9\", item.prize]\n      }), _jsxs(Text, {\n        style: styles.info,\n        children: [\"Date: \", new Date(item.date).toDateString()]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Available Tournaments\"\n    }), _jsx(FlatList, {\n      data: tournaments,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      renderItem: renderTournament,\n      ListEmptyComponent: _jsx(Text, {\n        style: styles.empty,\n        children: \"No tournaments available\"\n      })\n    }), _jsx(CustomButton, {\n      text: \"Profile\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Profile\");\n      }\n    }), _jsx(CustomButton, {\n      text: \"Community\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Community\");\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: \"#fff\"\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: \"bold\",\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  card: {\n    backgroundColor: \"#f8f8f8\",\n    padding: 15,\n    borderRadius: 8,\n    marginBottom: 10,\n    elevation: 2\n  },\n  name: {\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  info: {\n    fontSize: 14,\n    color: \"#555\"\n  },\n  empty: {\n    textAlign: \"center\",\n    marginTop: 20,\n    color: \"#666\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","FlatList","TouchableOpacity","Alert","CustomButton","API","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","tournaments","setTournaments","fetchTournaments","_ref2","_asyncToGenerator","res","get","data","alert","err","console","error","apply","arguments","renderTournament","_ref3","item","style","styles","card","onPress","navigate","id","_id","children","name","info","game","prize","Date","date","toDateString","container","title","keyExtractor","renderItem","ListEmptyComponent","empty","text","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","borderRadius","elevation","color","marginTop"],"sources":["/Users/sanket/Desktop/esports-platform/frontend/src/screens/HomeScreen.js"],"sourcesContent":["// src/screens/HomeScreen.js\nimport React, { useEffect, useState } from \"react\";\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, Alert } from \"react-native\";\nimport CustomButton from \"../components/CustomButton\";\nimport API from \"../api\";\n\nexport default function HomeScreen({ navigation }) {\n  const [tournaments, setTournaments] = useState([]);\n\n  useEffect(() => {\n    fetchTournaments();\n  }, []);\n\n  const fetchTournaments = async () => {\n    try {\n      const res = await API.get(\"/tournaments\");\n      if (res.data) {\n        setTournaments(res.data);\n      } else {\n        Alert.alert(\"Error\", \"Failed to load tournaments\");\n      }\n    } catch (err) {\n      console.error(\"Fetch tournaments error:\", err);\n      Alert.alert(\"Error\", \"Server not responding\");\n    }\n  };\n\n  const renderTournament = ({ item }) => (\n    <TouchableOpacity\n      style={styles.card}\n      onPress={() => navigation.navigate(\"TournamentDetail\", { id: item._id })}\n    >\n      <Text style={styles.name}>{item.name}</Text>\n      <Text style={styles.info}>Game: {item.game}</Text>\n      <Text style={styles.info}>Prize: â‚¹{item.prize}</Text>\n      <Text style={styles.info}>Date: {new Date(item.date).toDateString()}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Available Tournaments</Text>\n      <FlatList\n        data={tournaments}\n        keyExtractor={(item) => item._id}\n        renderItem={renderTournament}\n        ListEmptyComponent={<Text style={styles.empty}>No tournaments available</Text>}\n      />\n      <CustomButton text=\"Profile\" onPress={() => navigation.navigate(\"Profile\")} />\n      <CustomButton text=\"Community\" onPress={() => navigation.navigate(\"Community\")} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 20, backgroundColor: \"#fff\" },\n  title: { fontSize: 22, fontWeight: \"bold\", marginBottom: 15, textAlign: \"center\" },\n  card: {\n    backgroundColor: \"#f8f8f8\",\n    padding: 15,\n    borderRadius: 8,\n    marginBottom: 10,\n    elevation: 2,\n  },\n  name: { fontSize: 18, fontWeight: \"bold\" },\n  info: { fontSize: 14, color: \"#555\" },\n  empty: { textAlign: \"center\", marginTop: 20, color: \"#666\" },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}